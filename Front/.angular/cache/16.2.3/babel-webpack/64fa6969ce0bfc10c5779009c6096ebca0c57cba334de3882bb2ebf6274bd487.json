{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = \"http://localhost:8080/clientes\"; // Reemplaza con la URL correcta de tu API\n  }\n\n  getAllClientes() {\n    return this.http.get(this.apiUrl);\n  }\n  createCliente(cliente) {\n    return this.http.post(this.apiUrl, cliente);\n  }\n  updateCliente(cliente) {\n    const url = `${this.apiUrl}/${cliente.id}`;\n    return this.http.put(url, cliente);\n  }\n  deleteCliente(clienteId) {\n    const url = `${this.apiUrl}/${clienteId}`;\n    return this.http.delete(url);\n  }\n}\n_class = ApiService;\n_class.ɵfac = function ApiService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"names":["ApiService","constructor","http","apiUrl","getAllClientes","get","createCliente","cliente","post","updateCliente","url","id","put","deleteCliente","clienteId","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/home/tomas/Escritorio/Proyectos/arqui/Front/src/app/api.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ApiService {\n  private apiUrl = \"http://localhost:8080/clientes\"; // Reemplaza con la URL correcta de tu API\n\n  constructor(private http: HttpClient) {}\n\n  getAllClientes(): Observable<any[]> {\n    return this.http.get<any[]>(this.apiUrl);\n  }\n\n  createCliente(cliente: any): Observable<any> {\n    return this.http.post<any>(this.apiUrl, cliente);\n  }\n\n  updateCliente(cliente: any): Observable<any> {\n    const url = `${this.apiUrl}/${cliente.id}`;\n    return this.http.put<any>(url, cliente);\n  }\n\n  deleteCliente(clienteId: number): Observable<any> {\n    const url = `${this.apiUrl}/${clienteId}`;\n    return this.http.delete<any>(url);\n  }\n}\n"],"mappings":";;;AAOA,OAAM,MAAOA,UAAU;EAGrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,gCAAgC,CAAC,CAAC;EAEZ;;EAEvCC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,IAAI,CAACF,MAAM,CAAC;EAC1C;EAEAG,aAAaA,CAACC,OAAY;IACxB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAM,IAAI,CAACL,MAAM,EAAEI,OAAO,CAAC;EAClD;EAEAE,aAAaA,CAACF,OAAY;IACxB,MAAMG,GAAG,GAAG,GAAG,IAAI,CAACP,MAAM,IAAII,OAAO,CAACI,EAAE,EAAE;IAC1C,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAMF,GAAG,EAAEH,OAAO,CAAC;EACzC;EAEAM,aAAaA,CAACC,SAAiB;IAC7B,MAAMJ,GAAG,GAAG,GAAG,IAAI,CAACP,MAAM,IAAIW,SAAS,EAAE;IACzC,OAAO,IAAI,CAACZ,IAAI,CAACa,MAAM,CAAML,GAAG,CAAC;EACnC;;SArBWV,UAAU;;mBAAVA,MAAU,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAVnB,MAAU;EAAAoB,OAAA,EAAVpB,MAAU,CAAAqB,IAAA;EAAAC,UAAA,EAFT;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}