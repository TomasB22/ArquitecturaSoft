{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nimport * as i2 from \"@angular/common\";\nfunction ClientesComponent_tr_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function ClientesComponent_tr_24_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const cliente_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.modificarCliente(cliente_r1));\n    });\n    i0.ɵɵtext(11, \"Modificar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function ClientesComponent_tr_24_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const cliente_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.eliminarCliente(cliente_r1.id));\n    });\n    i0.ɵɵtext(13, \"Eliminar\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const cliente_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r1.nombre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r1.direccion);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r1.deuda);\n  }\n}\nexport class ClientesComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.clientes = [];\n    this.clientesFiltrados = [];\n    this.filtro = \"todos\"; // Por defecto, muestra todos los clientes\n    this.clientesMorosos = [];\n    this.clienteParaEditar = null;\n    this.clientesToDisplay = [];\n  }\n  ngOnInit() {\n    this.apiService.getAllClientes().subscribe(data => {\n      this.clientes = data;\n      this.clientesFiltrados = this.clientes; // Inicialmente muestra todos los clientes\n      this.getAllClientes();\n    });\n  }\n  filtrarClientes(filtro) {\n    if (filtro === \"morosos\") {\n      this.clientesFiltrados = this.clientes.filter(cliente => cliente.deuda > 0);\n    } else if (filtro === \"sin-deuda\") {\n      this.clientesFiltrados = this.clientes.filter(cliente => cliente.deuda === 0);\n    } else {\n      this.clientesFiltrados = this.clientes; // Mostrar todos\n    }\n  }\n\n  modificarCliente(cliente) {\n    this.clienteParaEditar = {\n      ...cliente\n    };\n  }\n  eliminarCliente(clienteId) {\n    // Envía una solicitud para eliminar el cliente y actualiza la lista de clientes\n    if (confirm(\"¿Estás seguro de que deseas eliminar este cliente?\")) {\n      this.apiService.deleteCliente(clienteId).subscribe(() => {\n        this.getAllClientes();\n      });\n    }\n  }\n}\n_class = ClientesComponent;\n_class.ɵfac = function ClientesComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ApiService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-clientes\"]],\n  decls: 25,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"filter-buttons\"], [3, \"click\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function ClientesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Listado de Clientes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function ClientesComponent_Template_button_click_4_listener() {\n        return ctx.filtrarClientes(\"todos\");\n      });\n      i0.ɵɵtext(5, \"Mostrar Todos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function ClientesComponent_Template_button_click_6_listener() {\n        return ctx.filtrarClientes(\"morosos\");\n      });\n      i0.ɵɵtext(7, \"Clientes Morosos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function ClientesComponent_Template_button_click_8_listener() {\n        return ctx.filtrarClientes(\"sin-deuda\");\n      });\n      i0.ɵɵtext(9, \"Clientes sin Deuda\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"table\", 3)(11, \"thead\")(12, \"tr\")(13, \"th\");\n      i0.ɵɵtext(14, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"Nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"Direcci\\u00F3n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"th\");\n      i0.ɵɵtext(20, \"Deuda\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"th\");\n      i0.ɵɵtext(22, \"Acciones\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(23, \"tbody\");\n      i0.ɵɵtemplate(24, ClientesComponent_tr_24_Template, 14, 4, \"tr\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(24);\n      i0.ɵɵproperty(\"ngForOf\", ctx.clientesFiltrados);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ClientesComponent_tr_24_Template_button_click_10_listener","restoredCtx","ɵɵrestoreView","_r3","cliente_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","modificarCliente","ClientesComponent_tr_24_Template_button_click_12_listener","ctx_r4","eliminarCliente","id","ɵɵadvance","ɵɵtextInterpolate","nombre","direccion","deuda","ClientesComponent","constructor","apiService","clientes","clientesFiltrados","filtro","clientesMorosos","clienteParaEditar","clientesToDisplay","ngOnInit","getAllClientes","subscribe","data","filtrarClientes","filter","cliente","clienteId","confirm","deleteCliente","ɵɵdirectiveInject","i1","ApiService","selectors","decls","vars","consts","template","ClientesComponent_Template","rf","ctx","ClientesComponent_Template_button_click_4_listener","ClientesComponent_Template_button_click_6_listener","ClientesComponent_Template_button_click_8_listener","ɵɵtemplate","ClientesComponent_tr_24_Template","ɵɵproperty"],"sources":["/home/tomas/Escritorio/Proyectos/arqui/Front/src/app/clientes/clientes.component.ts","/home/tomas/Escritorio/Proyectos/arqui/Front/src/app/clientes/clientes.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { ApiService } from \"../api.service\";\n\n@Component({\n  selector: \"app-clientes\",\n  templateUrl: \"./clientes.component.html\",\n  styleUrls: [\"./clientes.component.css\"],\n})\nexport class ClientesComponent implements OnInit {\n  clientes: any[] = [];\n  clientesFiltrados: any[] = [];\n  filtro: string = \"todos\"; // Por defecto, muestra todos los clientes\n  clientesMorosos: any[] = [];\n  clienteParaEditar: any = null;\n  clientesToDisplay: any[] = [];\n\n  constructor(private apiService: ApiService) {}\n\n  ngOnInit(): void {\n    this.apiService.getAllClientes().subscribe((data: any[]) => {\n      this.clientes = data;\n      this.clientesFiltrados = this.clientes; // Inicialmente muestra todos los clientes\n      this.getAllClientes();\n    });\n  }\n\n  filtrarClientes(filtro: string) {\n    if (filtro === \"morosos\") {\n      this.clientesFiltrados = this.clientes.filter(\n        (cliente) => cliente.deuda > 0\n      );\n    } else if (filtro === \"sin-deuda\") {\n      this.clientesFiltrados = this.clientes.filter(\n        (cliente) => cliente.deuda === 0\n      );\n    } else {\n      this.clientesFiltrados = this.clientes; // Mostrar todos\n    }\n  }\n\n  modificarCliente(cliente: any) {\n    this.clienteParaEditar = { ...cliente };\n  }\n\n  eliminarCliente(clienteId: number) {\n    // Envía una solicitud para eliminar el cliente y actualiza la lista de clientes\n    if (confirm(\"¿Estás seguro de que deseas eliminar este cliente?\")) {\n      this.apiService.deleteCliente(clienteId).subscribe(() => {\n        this.getAllClientes();\n      });\n    }\n  }\n}\n","<div class=\"container\">\n    <h1>Listado de Clientes</h1>\n    <div class=\"filter-buttons\">\n        <button (click)=\"filtrarClientes('todos')\">Mostrar Todos</button>\n        <button (click)=\"filtrarClientes('morosos')\">Clientes Morosos</button>\n        <button (click)=\"filtrarClientes('sin-deuda')\">Clientes sin Deuda</button>\n    </div>\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <th>ID</th>\n                <th>Nombre</th>\n                <th>Dirección</th>\n                <th>Deuda</th>\n                <th>Acciones</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let cliente of clientesFiltrados\">\n                <td>{{ cliente.id }}</td>\n                <td>{{ cliente.nombre }}</td>\n                <td>{{ cliente.direccion }}</td>\n                <td>{{ cliente.deuda }}</td>\n                <td>\n                    <button (click)=\"modificarCliente(cliente)\">Modificar</button>\n                    <button (click)=\"eliminarCliente(cliente.id)\">Eliminar</button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}