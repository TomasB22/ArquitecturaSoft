{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AppComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function AppComponent_tr_21_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const cliente_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.editarCliente(cliente_r2));\n    });\n    i0.ɵɵtext(11, \"Editar\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const cliente_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r2.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r2.nombre);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r2.direccion);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cliente_r2.deuda);\n  }\n}\nfunction AppComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\", 6)(2, \"span\", 7);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_22_Template_span_click_2_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.cancelarEdicion());\n    });\n    i0.ɵɵtext(3, \"\\u00D7\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h2\");\n    i0.ɵɵtext(5, \"Editar Cliente\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"label\", 8);\n    i0.ɵɵtext(7, \"Nombre:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function AppComponent_div_22_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.clienteParaEditar.nombre = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"label\", 10);\n    i0.ɵɵtext(10, \"Direcci\\u00F3n:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"input\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function AppComponent_div_22_Template_input_ngModelChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.clienteParaEditar.direccion = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"label\", 12);\n    i0.ɵɵtext(13, \"Deuda:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"input\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function AppComponent_div_22_Template_input_ngModelChange_14_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.clienteParaEditar.deuda = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_22_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.guardarEdicion());\n    });\n    i0.ɵɵtext(16, \"Guardar Cambios\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.clienteParaEditar.nombre);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.clienteParaEditar.direccion);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.clienteParaEditar.deuda);\n  }\n}\nexport class AppComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.clientes = [];\n    this.clientesMorosos = [];\n    this.clienteParaEditar = null;\n    this.clienteParaEliminar = null;\n    this.clientesToDisplay = []; // Esta variable almacenará los clientes filtrados\n    this.mostrarMorososFlag = false;\n    this.mostrandoMorosos = false;\n  }\n  ngOnInit() {\n    this.apiService.getAllClientes().subscribe(data => {\n      this.clientes = data;\n      this.clientesMorosos = this.clientes.filter(cliente => cliente.deuda > 0);\n      this.clientesToDisplay = [...this.clientes]; // Inicialmente, muestra todos los clientes\n    });\n  }\n\n  editarCliente(cliente) {\n    this.clienteParaEditar = {\n      ...cliente\n    };\n  }\n  guardarEdicion() {\n    if (this.clienteParaEditar) {\n      // Lógica para guardar los cambios del cliente\n      // Por ejemplo, puedes enviar una solicitud PUT a la API\n      this.apiService.updateCliente(this.clienteParaEditar).subscribe(response => {\n        // Actualiza la lista de clientes o maneja la respuesta de la API\n        // Puedes recargar la lista de clientes aquí si es necesario\n        this.clienteParaEditar = null;\n      }, error => {\n        // Maneja errores de la solicitud de actualización\n        console.error(\"Error al actualizar el cliente:\", error);\n      });\n    }\n  }\n  cancelarEdicion() {\n    this.clienteParaEditar = null;\n  }\n  eliminarCliente(clienteId) {\n    // Lógica para eliminar un cliente por su ID\n    // Por ejemplo, puedes enviar una solicitud DELETE a la API\n    this.apiService.deleteCliente(clienteId).subscribe(response => {\n      // Actualiza la lista de clientes o maneja la respuesta de la API\n      // Puedes recargar la lista de clientes aquí si es necesario\n      this.clienteParaEliminar = null;\n    }, error => {\n      // Maneja errores de la solicitud de eliminación\n      console.error(\"Error al eliminar el cliente:\", error);\n    });\n  }\n  mostrarMorosos() {\n    if (this.mostrandoMorosos) {\n      // Si ya se están mostrando morosos, muestra todos los clientes\n      this.clientesToDisplay = [...this.clientes];\n      this.mostrandoMorosos = false;\n    } else {\n      // Si no se están mostrando morosos, filtra y muestra solo a los morosos\n      this.clientesToDisplay = this.clientes.filter(cliente => cliente.deuda > 0);\n      this.mostrandoMorosos = true;\n    }\n  }\n  mostrarTodos() {\n    // Muestra todos los clientes nuevamente\n    this.clientesToDisplay = [...this.clientes];\n    this.mostrarMorososFlag = false;\n  }\n  reloadClientes() {\n    // Lógica para recargar la lista de clientes, puedes llamar a la función para obtener los clientes nuevamente.\n    this.apiService.getAllClientes().subscribe(data => {\n      this.clientes = data;\n      this.clientesMorosos = this.clientes.filter(cliente => cliente.deuda > 0);\n      // Verifica si el botón \"Mostrar Morosos\" está activo y actualiza la lista de clientes a mostrar en consecuencia\n      if (this.mostrarMorososFlag) {\n        this.clientesToDisplay = this.clientesMorosos;\n      } else {\n        this.clientesToDisplay = [...this.clientes];\n      }\n    }, error => {\n      // Maneja errores en la solicitud de recarga de clientes\n      console.error(\"Error al recargar la lista de clientes:\", error);\n    });\n  }\n}\n_class = AppComponent;\n_class.ɵfac = function AppComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ApiService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-root\"]],\n  decls: 23,\n  vars: 2,\n  consts: [[1, \"container\"], [3, \"click\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"modal\", 4, \"ngIf\"], [1, \"modal\"], [1, \"modal-content\"], [1, \"close\", 3, \"click\"], [\"for\", \"nombre\"], [\"name\", \"nombre\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"direccion\"], [\"name\", \"direccion\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"deuda\"], [\"name\", \"deuda\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Listado de Clientes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_3_listener() {\n        return ctx.mostrarMorosos();\n      });\n      i0.ɵɵtext(4, \"Mostrar Morosos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_5_listener() {\n        return ctx.reloadClientes();\n      });\n      i0.ɵɵtext(6, \"Recargar Clientes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"table\", 2)(8, \"thead\")(9, \"tr\")(10, \"th\");\n      i0.ɵɵtext(11, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"Nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Direcci\\u00F3n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\");\n      i0.ɵɵtext(17, \"Deuda\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\");\n      i0.ɵɵtext(19, \"Acciones\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(20, \"tbody\");\n      i0.ɵɵtemplate(21, AppComponent_tr_21_Template, 12, 4, \"tr\", 3);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(22, AppComponent_div_22_Template, 17, 3, \"div\", 4);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(21);\n      i0.ɵɵproperty(\"ngForOf\", ctx.clientesToDisplay);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.clienteParaEditar);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.RequiredValidator, i3.NgModel],\n  styles: [\"\\n\\n\\n\\n\\nbody[_ngcontent-%COMP%] {\\n    font-family: Arial, sans-serif;\\n    background-color: #f0f0f0;\\n    margin: 0;\\n    padding: 0;\\n  }\\n  \\n  .container[_ngcontent-%COMP%] {\\n    max-width: 800px;\\n    margin: 20px auto;\\n    padding: 20px;\\n    background-color: #fff;\\n    border-radius: 5px;\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n  }\\n  \\n  \\n\\n  .table[_ngcontent-%COMP%] {\\n    width: 100%;\\n    border-collapse: collapse;\\n  }\\n  \\n  .table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n    padding: 12px 15px;\\n    text-align: left;\\n    border-bottom: 1px solid #ddd;\\n  }\\n  \\n  .table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n    background-color: #f2f2f2;\\n    font-weight: bold;\\n  }\\n  \\n  .table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(even) {\\n    background-color: #f9f9f9;\\n  }\\n  \\n  .table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover {\\n    background-color: #e0e0e0;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZUFBZTs7QUFFZixxQ0FBcUM7QUFDckM7SUFDSSw4QkFBOEI7SUFDOUIseUJBQXlCO0lBQ3pCLFNBQVM7SUFDVCxVQUFVO0VBQ1o7O0VBRUE7SUFDRSxnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLHVDQUF1QztFQUN6Qzs7RUFFQSwwQkFBMEI7RUFDMUI7SUFDRSxXQUFXO0lBQ1gseUJBQXlCO0VBQzNCOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQiw2QkFBNkI7RUFDL0I7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIsaUJBQWlCO0VBQ25COztFQUVBO0lBQ0UseUJBQXlCO0VBQzNCOztFQUVBO0lBQ0UseUJBQXlCO0VBQzNCIiwic291cmNlc0NvbnRlbnQiOlsiLyogc3R5bGVzLmNzcyAqL1xuXG4vKiBFc3RpbG9zIGdlbmVyYWxlcyBwYXJhIGxhIHDDg8KhZ2luYSAqL1xuYm9keSB7XG4gICAgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmMGYwZjA7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gIH1cbiAgXG4gIC5jb250YWluZXIge1xuICAgIG1heC13aWR0aDogODAwcHg7XG4gICAgbWFyZ2luOiAyMHB4IGF1dG87XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBib3gtc2hhZG93OiAwIDAgMTBweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIH1cbiAgXG4gIC8qIEVzdGlsb3MgcGFyYSBsYSB0YWJsYSAqL1xuICAudGFibGUge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIH1cbiAgXG4gIC50YWJsZSB0aCwgLnRhYmxlIHRkIHtcbiAgICBwYWRkaW5nOiAxMnB4IDE1cHg7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDtcbiAgfVxuICBcbiAgLnRhYmxlIHRoIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICB9XG4gIFxuICAudGFibGUgdHI6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xuICB9XG4gIFxuICAudGFibGUgdHI6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlMGUwZTA7XG4gIH1cbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AppComponent_tr_21_Template_button_click_10_listener","restoredCtx","ɵɵrestoreView","_r4","cliente_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","editarCliente","ɵɵadvance","ɵɵtextInterpolate","id","nombre","direccion","deuda","AppComponent_div_22_Template_span_click_2_listener","_r6","ctx_r5","cancelarEdicion","AppComponent_div_22_Template_input_ngModelChange_8_listener","$event","ctx_r7","clienteParaEditar","AppComponent_div_22_Template_input_ngModelChange_11_listener","ctx_r8","AppComponent_div_22_Template_input_ngModelChange_14_listener","ctx_r9","AppComponent_div_22_Template_button_click_15_listener","ctx_r10","guardarEdicion","ɵɵproperty","ctx_r1","AppComponent","constructor","apiService","clientes","clientesMorosos","clienteParaEliminar","clientesToDisplay","mostrarMorososFlag","mostrandoMorosos","ngOnInit","getAllClientes","subscribe","data","filter","cliente","updateCliente","response","error","console","eliminarCliente","clienteId","deleteCliente","mostrarMorosos","mostrarTodos","reloadClientes","ɵɵdirectiveInject","i1","ApiService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_Template_button_click_3_listener","AppComponent_Template_button_click_5_listener","ɵɵtemplate","AppComponent_tr_21_Template","AppComponent_div_22_Template"],"sources":["/home/tomas/Escritorio/Proyectos/arqui/Front/src/app/app.component.ts","/home/tomas/Escritorio/Proyectos/arqui/Front/src/app/app.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { ApiService } from \"./api.service\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent implements OnInit {\n  clientes: any[] = [];\n  clientesMorosos: any[] = [];\n  clienteParaEditar: any = null;\n  clienteParaEliminar: any = null;\n  clientesToDisplay: any[] = []; // Esta variable almacenará los clientes filtrados\n  mostrarMorososFlag: boolean = false;\n  mostrandoMorosos: boolean = false;\n\n  constructor(private apiService: ApiService) {}\n\n  ngOnInit() {\n    this.apiService.getAllClientes().subscribe((data: any) => {\n      this.clientes = data;\n      this.clientesMorosos = this.clientes.filter(\n        (cliente) => cliente.deuda > 0\n      );\n      this.clientesToDisplay = [...this.clientes]; // Inicialmente, muestra todos los clientes\n    });\n  }\n\n  editarCliente(cliente: any) {\n    this.clienteParaEditar = { ...cliente };\n  }\n\n  guardarEdicion() {\n    if (this.clienteParaEditar) {\n      // Lógica para guardar los cambios del cliente\n      // Por ejemplo, puedes enviar una solicitud PUT a la API\n      this.apiService.updateCliente(this.clienteParaEditar).subscribe(\n        (response: any) => {\n          // Actualiza la lista de clientes o maneja la respuesta de la API\n          // Puedes recargar la lista de clientes aquí si es necesario\n          this.clienteParaEditar = null;\n        },\n        (error) => {\n          // Maneja errores de la solicitud de actualización\n          console.error(\"Error al actualizar el cliente:\", error);\n        }\n      );\n    }\n  }\n\n  cancelarEdicion() {\n    this.clienteParaEditar = null;\n  }\n\n  eliminarCliente(clienteId: number) {\n    // Lógica para eliminar un cliente por su ID\n    // Por ejemplo, puedes enviar una solicitud DELETE a la API\n    this.apiService.deleteCliente(clienteId).subscribe(\n      (response: any) => {\n        // Actualiza la lista de clientes o maneja la respuesta de la API\n        // Puedes recargar la lista de clientes aquí si es necesario\n        this.clienteParaEliminar = null;\n      },\n      (error) => {\n        // Maneja errores de la solicitud de eliminación\n        console.error(\"Error al eliminar el cliente:\", error);\n      }\n    );\n  }\n  mostrarMorosos() {\n    if (this.mostrandoMorosos) {\n      // Si ya se están mostrando morosos, muestra todos los clientes\n      this.clientesToDisplay = [...this.clientes];\n      this.mostrandoMorosos = false;\n    } else {\n      // Si no se están mostrando morosos, filtra y muestra solo a los morosos\n      this.clientesToDisplay = this.clientes.filter(\n        (cliente) => cliente.deuda > 0\n      );\n      this.mostrandoMorosos = true;\n    }\n  }\n\n  mostrarTodos() {\n    // Muestra todos los clientes nuevamente\n    this.clientesToDisplay = [...this.clientes];\n    this.mostrarMorososFlag = false;\n  }\n\n  reloadClientes() {\n    // Lógica para recargar la lista de clientes, puedes llamar a la función para obtener los clientes nuevamente.\n    this.apiService.getAllClientes().subscribe(\n      (data: any) => {\n        this.clientes = data;\n        this.clientesMorosos = this.clientes.filter(\n          (cliente) => cliente.deuda > 0\n        );\n\n        // Verifica si el botón \"Mostrar Morosos\" está activo y actualiza la lista de clientes a mostrar en consecuencia\n        if (this.mostrarMorososFlag) {\n          this.clientesToDisplay = this.clientesMorosos;\n        } else {\n          this.clientesToDisplay = [...this.clientes];\n        }\n      },\n      (error) => {\n        // Maneja errores en la solicitud de recarga de clientes\n        console.error(\"Error al recargar la lista de clientes:\", error);\n      }\n    );\n  }\n}\n","<div class=\"container\">\n  <h1>Listado de Clientes</h1>\n  <button (click)=\"mostrarMorosos()\">Mostrar Morosos</button>\n  <button (click)=\"reloadClientes()\">Recargar Clientes</button>\n  <table class=\"table\">\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>Nombre</th>\n        <th>Dirección</th>\n        <th>Deuda</th>\n        <th>Acciones</th> <!-- Columna para botones -->\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let cliente of clientesToDisplay\">\n        <td>{{ cliente.id }}</td>\n        <td>{{ cliente.nombre }}</td>\n        <td>{{ cliente.direccion }}</td>\n        <td>{{ cliente.deuda }}</td>\n        <td>\n          <button (click)=\"editarCliente(cliente)\">Editar</button>\n          <!--           <button (click)=\"eliminarCliente(cliente.id)\">Eliminar</button>\n -->\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n<!-- Pantalla para modificar cliente -->\n<div *ngIf=\"clienteParaEditar\" class=\"modal\">\n  <div class=\"modal-content\">\n    <span class=\"close\" (click)=\"cancelarEdicion()\">&times;</span>\n    <h2>Editar Cliente</h2>\n    <!-- Agrega campos de edición aquí -->\n    <label for=\"nombre\">Nombre:</label>\n    <input [(ngModel)]=\"clienteParaEditar.nombre\" name=\"nombre\" required>\n    <label for=\"direccion\">Dirección:</label>\n    <input [(ngModel)]=\"clienteParaEditar.direccion\" name=\"direccion\" required>\n    <label for=\"deuda\">Deuda:</label>\n    <input [(ngModel)]=\"clienteParaEditar.deuda\" name=\"deuda\" required>\n    <button (click)=\"guardarEdicion()\">Guardar Cambios</button>\n  </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}