{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nexport class ClientesComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.clientes = [];\n    this.clientesFiltrados = [];\n    this.filtro = \"todos\"; // Por defecto, muestra todos los clientes\n    this.clientesMorosos = [];\n    this.clienteParaEditar = null;\n    this.clientesToDisplay = [];\n  }\n  ngOnInit() {\n    this.apiService.getAllClientes().subscribe(data => {\n      this.clientes = data;\n      this.clientesFiltrados = this.clientes; // Inicialmente muestra todos los clientes\n      this.getAllClientes();\n    });\n  }\n  filtrarClientes(filtro) {\n    if (filtro === \"morosos\") {\n      this.clientesFiltrados = this.clientes.filter(cliente => cliente.deuda > 0);\n    } else if (filtro === \"sin-deuda\") {\n      this.clientesFiltrados = this.clientes.filter(cliente => cliente.deuda === 0);\n    } else {\n      this.clientesFiltrados = this.clientes; // Mostrar todos\n    }\n  }\n\n  modificarCliente(cliente) {\n    this.clienteParaEditar = {\n      ...cliente\n    };\n  }\n  eliminarCliente(clienteId) {\n    // Envía una solicitud para eliminar el cliente y actualiza la lista de clientes\n    if (confirm(\"¿Estás seguro de que deseas eliminar este cliente?\")) {\n      this.apiService.deleteCliente(clienteId).subscribe(() => {\n        this.getAllClientes();\n      });\n    }\n  }\n}\n_class = ClientesComponent;\n_class.ɵfac = function ClientesComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ApiService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-clientes\"]],\n  decls: 2,\n  vars: 0,\n  template: function ClientesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"clientes works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["ClientesComponent","constructor","apiService","clientes","clientesFiltrados","filtro","clientesMorosos","clienteParaEditar","clientesToDisplay","ngOnInit","getAllClientes","subscribe","data","filtrarClientes","filter","cliente","deuda","modificarCliente","eliminarCliente","clienteId","confirm","deleteCliente","i0","ɵɵdirectiveInject","i1","ApiService","selectors","decls","vars","template","ClientesComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["/home/tomas/Escritorio/Proyectos/arqui/Front/src/app/clientes/clientes.component.ts","/home/tomas/Escritorio/Proyectos/arqui/Front/src/app/clientes/clientes.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { ApiService } from \"../api.service\";\n\n@Component({\n  selector: \"app-clientes\",\n  templateUrl: \"./clientes.component.html\",\n  styleUrls: [\"./clientes.component.css\"],\n})\nexport class ClientesComponent implements OnInit {\n  clientes: any[] = [];\n  clientesFiltrados: any[] = [];\n  filtro: string = \"todos\"; // Por defecto, muestra todos los clientes\n  clientesMorosos: any[] = [];\n  clienteParaEditar: any = null;\n  clientesToDisplay: any[] = [];\n\n  constructor(private apiService: ApiService) {}\n\n  ngOnInit(): void {\n    this.apiService.getAllClientes().subscribe((data: any[]) => {\n      this.clientes = data;\n      this.clientesFiltrados = this.clientes; // Inicialmente muestra todos los clientes\n      this.getAllClientes();\n    });\n  }\n\n  filtrarClientes(filtro: string) {\n    if (filtro === \"morosos\") {\n      this.clientesFiltrados = this.clientes.filter(\n        (cliente) => cliente.deuda > 0\n      );\n    } else if (filtro === \"sin-deuda\") {\n      this.clientesFiltrados = this.clientes.filter(\n        (cliente) => cliente.deuda === 0\n      );\n    } else {\n      this.clientesFiltrados = this.clientes; // Mostrar todos\n    }\n  }\n\n  modificarCliente(cliente: any) {\n    this.clienteParaEditar = { ...cliente };\n  }\n\n  eliminarCliente(clienteId: number) {\n    // Envía una solicitud para eliminar el cliente y actualiza la lista de clientes\n    if (confirm(\"¿Estás seguro de que deseas eliminar este cliente?\")) {\n      this.apiService.deleteCliente(clienteId).subscribe(() => {\n        this.getAllClientes();\n      });\n    }\n  }\n}\n","<p>clientes works!</p>\n"],"mappings":";;;AAQA,OAAM,MAAOA,iBAAiB;EAQ5BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAP9B,KAAAC,QAAQ,GAAU,EAAE;IACpB,KAAAC,iBAAiB,GAAU,EAAE;IAC7B,KAAAC,MAAM,GAAW,OAAO,CAAC,CAAC;IAC1B,KAAAC,eAAe,GAAU,EAAE;IAC3B,KAAAC,iBAAiB,GAAQ,IAAI;IAC7B,KAAAC,iBAAiB,GAAU,EAAE;EAEgB;EAE7CC,QAAQA,CAAA;IACN,IAAI,CAACP,UAAU,CAACQ,cAAc,EAAE,CAACC,SAAS,CAAEC,IAAW,IAAI;MACzD,IAAI,CAACT,QAAQ,GAAGS,IAAI;MACpB,IAAI,CAACR,iBAAiB,GAAG,IAAI,CAACD,QAAQ,CAAC,CAAC;MACxC,IAAI,CAACO,cAAc,EAAE;IACvB,CAAC,CAAC;EACJ;EAEAG,eAAeA,CAACR,MAAc;IAC5B,IAAIA,MAAM,KAAK,SAAS,EAAE;MACxB,IAAI,CAACD,iBAAiB,GAAG,IAAI,CAACD,QAAQ,CAACW,MAAM,CAC1CC,OAAO,IAAKA,OAAO,CAACC,KAAK,GAAG,CAAC,CAC/B;KACF,MAAM,IAAIX,MAAM,KAAK,WAAW,EAAE;MACjC,IAAI,CAACD,iBAAiB,GAAG,IAAI,CAACD,QAAQ,CAACW,MAAM,CAC1CC,OAAO,IAAKA,OAAO,CAACC,KAAK,KAAK,CAAC,CACjC;KACF,MAAM;MACL,IAAI,CAACZ,iBAAiB,GAAG,IAAI,CAACD,QAAQ,CAAC,CAAC;;EAE5C;;EAEAc,gBAAgBA,CAACF,OAAY;IAC3B,IAAI,CAACR,iBAAiB,GAAG;MAAE,GAAGQ;IAAO,CAAE;EACzC;EAEAG,eAAeA,CAACC,SAAiB;IAC/B;IACA,IAAIC,OAAO,CAAC,oDAAoD,CAAC,EAAE;MACjE,IAAI,CAAClB,UAAU,CAACmB,aAAa,CAACF,SAAS,CAAC,CAACR,SAAS,CAAC,MAAK;QACtD,IAAI,CAACD,cAAc,EAAE;MACvB,CAAC,CAAC;;EAEN;;SA3CWV,iBAAiB;;mBAAjBA,MAAiB,EAAAsB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;QAAjBzB,MAAiB;EAAA0B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR9BT,EAAA,CAAAW,cAAA,QAAG;MAAAX,EAAA,CAAAY,MAAA,sBAAe;MAAAZ,EAAA,CAAAa,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}